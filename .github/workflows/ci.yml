name: Go CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*' # Trigger on tags like v1.0, v0.1.0, etc.
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run ./...

  build-release:
    name: Build and Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Only run for tags starting with 'v'
    needs: lint # Ensure linting passes before building
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Build for Linux (amd64)
        run: |
          GOOS=linux GOARCH=amd64 go build -o file-editor-linux-amd64 ./cmd/file-editor
          echo "Built file-editor-linux-amd64"

      - name: Build for Linux (arm64)
        run: |
          GOOS=linux GOARCH=arm64 go build -o file-editor-linux-arm64 ./cmd/file-editor
          echo "Built file-editor-linux-arm64"

      - name: Build for macOS (amd64)
        run: |
          GOOS=darwin GOARCH=amd64 go build -o file-editor-darwin-amd64 ./cmd/file-editor
          echo "Built file-editor-darwin-amd64"

      - name: Build for macOS (arm64)
        run: |
          GOOS=darwin GOARCH=arm64 go build -o file-editor-darwin-arm64 ./cmd/file-editor
          echo "Built file-editor-darwin-arm64"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            file-editor-linux-amd64
            file-editor-linux-arm64
            file-editor-darwin-amd64
            file-editor-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
